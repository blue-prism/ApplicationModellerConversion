# Deploys latest release to DX

name: DeployToDX-BP
permissions:
      id-token: write
      
on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    
  DeployToDX: 
    runs-on: windows-2019
    steps: 
    
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
         '${{ toJSON(github) }}' | Set-Content C:\temp\event.json
         
      - name: Establish Connection To AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.role_to_assume }}
          role-session-name: GithubDXSession
          aws-region: ${{ secrets.aws_region }}   
 
      - name: Fetch BP Build Process and Mapping from AWS S3
        run: |       
          aws s3 cp s3://githubdx/bprelease.bprelease . 
          Copy-Item bprelease.bprelease -Destination 'C:\temp\bprelease.bprelease'
          aws s3 cp s3://githubdx/assetmapping.csv . 
          Copy-Item assetmapping.csv -Destination 'C:\temp'
          
      
      - name: Fetch BP Image from AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 893184497687.dkr.ecr.us-east-1.amazonaws.com
          docker pull 893184497687.dkr.ecr.us-east-1.amazonaws.com/blueprism6.10:latest

      - name: Run BP Process
        id: run_process
        run: |
          Get-ChildItem C:\Temp\
          docker run  -p 1433:1433 -v 'C:/temp/:C:/temp/' -e processname=GitHubDXAssetCICD -e timeout=500 893184497687.dkr.ecr.us-east-1.amazonaws.com/blueprism6.10:latest
          $output = Get-Content C:\temp\output.txt
          if ($output -eq "COMPLETED") { echo "::set-output name=bpoutput::$output" ;}
          else { $output="FAILED. PLEASE CHECK SESSION LOGS";echo "::set-output name=bpoutput::$output";exit 1}

      - name: Notify Teams
        uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ secrets.g_token }}
          webhook-uri: ${{ secrets.TEAM_HOOK }}
          custom-facts: |
           - name: BluePrism-Output
             value: ${{ steps.run_process.outputs.bpoutput }}
          show-on-start: False
          show-on-exit: True
          show-on-failure: False
          card-layout-exit: 'complete'

 